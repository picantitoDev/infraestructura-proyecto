<head>
  <style>
            :root {
          --primary-color: #3498db;
          --primary-dark: #2980b9;
          --accent-color: #2ecc71;
          --accent-dark: #27ae60;
          --danger-color: #e74c3c;
          --warning-color: #f39c12;
          --gray-light: #f5f5f5;
          --gray-medium: #e0e0e0;
          --gray-dark: #718093;
          --text-color: #2d3436;
          --shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
          --border-radius: 6px;
          --transition: all 0.3s ease;
        }

        * {
          margin: 0;
          padding: 0;
          box-sizing: border-box;
          font-family: 'Poppins', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        /* Reset Password Page Styles */
        .reset-password-background {
          min-height: 100vh;
          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
          display: flex;
          align-items: center;
          justify-content: center;
          padding: 20px;
          position: relative;
        }

        .reset-password-background::before {
          content: '';
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.03'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E") repeat;
          pointer-events: none;
        }

        .reset-password-wrapper {
          background: white;
          border-radius: 12px;
          box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
          overflow: hidden;
          width: 100%;
          max-width: 450px;
          position: relative;
          animation: fadeInUp 0.6s ease-out;
        }

        @keyframes fadeInUp {
          from {
            opacity: 0;
            transform: translateY(30px);
          }
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }

        .back-button-container {
          position: absolute;
          top: 20px;
          left: 20px;
          z-index: 10;
        }

        .back-button {
          display: inline-flex;
          align-items: center;
          padding: 8px 12px;
          background-color: rgba(255, 255, 255, 0.9);
          color: var(--primary-color);
          text-decoration: none;
          border-radius: 20px;
          font-size: 14px;
          font-weight: 500;
          transition: var(--transition);
          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
          backdrop-filter: blur(10px);
        }

        .back-button:hover {
          background-color: rgba(255, 255, 255, 1);
          color: var(--primary-dark);
          transform: translateX(-2px);
        }

        .back-button i {
          margin-right: 6px;
          font-size: 12px;
        }

        .reset-password-container {
          padding: 50px 40px 40px;
          text-align: center;
        }

        .reset-password-header {
          margin-bottom: 30px;
        }

        .reset-password-icon {
          font-size: 56px;
          color: var(--primary-color);
          margin-bottom: 20px;
          display: block;
        }

        .reset-password-container h2 {
          font-size: 26px;
          font-weight: 600;
          color: var(--text-color);
          margin-bottom: 12px;
          font-family: 'Poppins', sans-serif;
        }

        .reset-password-subtitle {
          color: var(--gray-dark);
          font-size: 15px;
          line-height: 1.5;
          margin-bottom: 30px;
          max-width: 320px;
          margin-left: auto;
          margin-right: auto;
        }

        .reset-password-form {
          margin-bottom: 25px;
        }

        .password-input-group {
          position: relative;
          margin-bottom: 16px;
        }

        .password-input-group input {
          width: 100%;
          padding: 16px 80px 16px 16px;
          border: 1px solid var(--gray-medium);
          border-radius: var(--border-radius);
          font-size: 15px;
          font-family: inherit;
          transition: var(--transition);
          background-color: #fafbfc;
        }

        .password-input-group input:focus {
          outline: none;
          border-color: var(--primary-color);
          box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.15);
          background-color: white;
        }

        .password-input-group input::placeholder {
          color: var(--gray-dark);
          font-weight: 400;
        }

        .password-input-group .toggle-password {
          position: absolute;
          right: 45px;
          top: 50%;
          transform: translateY(-50%);
          color: var(--gray-dark);
          font-size: 16px;
          cursor: pointer;
          transition: var(--transition);
        }

        .password-input-group .toggle-password:hover {
          color: var(--primary-color);
        }

        .password-input-group.valid input {
          border-color: var(--accent-color);
          background-color: #f0f9ff;
        }

        .password-input-group.invalid input {
          border-color: var(--danger-color);
          background-color: #fef2f2;
        }

        .validation-icon {
          position: absolute;
          right: 16px;
          top: 50%;
          transform: translateY(-50%);
          font-size: 14px;
          opacity: 0;
          transition: opacity 0.3s ease;
        }

        .validation-icon.valid {
          color: var(--accent-color);
          opacity: 1;
        }

        .validation-icon.invalid {
          color: var(--danger-color);
          opacity: 1;
        }

        .password-strength {
          margin-top: 8px;
          margin-bottom: 12px;
          text-align: left;
        }

        .strength-bar {
          height: 4px;
          background-color: var(--gray-light);
          border-radius: 2px;
          overflow: hidden;
          margin-bottom: 8px;
        }

        .strength-fill {
          height: 100%;
          width: 0%;
          transition: all 0.3s ease;
          border-radius: 2px;
        }

        .strength-fill.weak {
          width: 33%;
          background-color: var(--danger-color);
        }

        .strength-fill.medium {
          width: 66%;
          background-color: var(--warning-color);
        }

        .strength-fill.strong {
          width: 100%;
          background-color: var(--accent-color);
        }

        .strength-text {
          font-size: 12px;
          color: var(--gray-dark);
        }

        .strength-text.weak {
          color: var(--danger-color);
        }

        .strength-text.medium {
          color: var(--warning-color);
        }

        .strength-text.strong {
          color: var(--accent-color);
        }

        .password-match-message {
          font-size: 13px;
          margin-top: 6px;
          text-align: left;
          opacity: 0;
          transition: opacity 0.3s ease;
        }

        .password-match-message.show {
          opacity: 1;
        }

        .password-match-message.match {
          color: var(--accent-color);
        }

        .password-match-message.no-match {
          color: var(--danger-color);
        }

        .password-match-message::before {
          margin-right: 6px;
          font-family: 'Font Awesome 5 Free';
          font-weight: 900;
        }

        .password-match-message.match::before {
          content: '\f058';
        }

        .password-match-message.no-match::before {
          content: '\f057';
        }

        .reset-button {
          width: 100%;
          padding: 16px 20px;
          background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
          color: white;
          border: none;
          border-radius: var(--border-radius);
          font-size: 16px;
          font-weight: 500;
          cursor: pointer;
          transition: var(--transition);
          font-family: inherit;
          box-shadow: 0 4px 12px rgba(52, 152, 219, 0.3);
          margin-top: 10px;
          position: relative;
        }

        .reset-button:hover:not(:disabled) {
          transform: translateY(-2px);
          box-shadow: 0 8px 20px rgba(52, 152, 219, 0.4);
        }

        .reset-button:active {
          transform: translateY(0);
          box-shadow: 0 4px 12px rgba(52, 152, 219, 0.3);
        }

        .reset-button:disabled {
          opacity: 0.6;
          cursor: not-allowed;
          transform: none;
          box-shadow: 0 4px 12px rgba(52, 152, 219, 0.2);
        }

        .reset-button::before {
          content: '\f084';
          font-family: 'Font Awesome 5 Free';
          font-weight: 900;
          margin-right: 8px;
        }

        .error {
          background-color: #fef2f2;
          border: 1px solid #fecaca;
          color: var(--danger-color);
          padding: 14px 18px;
          border-radius: var(--border-radius);
          margin-bottom: 25px;
          font-size: 14px;
          display: flex;
          align-items: center;
          animation: shake 0.5s ease-in-out;
        }

        .error::before {
          content: '\f071';
          font-family: 'Font Awesome 5 Free';
          font-weight: 900;
          margin-right: 10px;
          font-size: 16px;
        }

        @keyframes shake {
          0%, 100% { transform: translateX(0); }
          25% { transform: translateX(-5px); }
          75% { transform: translateX(5px); }
        }

        .back-to-login {
          margin-top: 20px;
          padding-top: 20px;
          border-top: 1px solid var(--gray-light);
        }

        .back-to-login a {
          color: var(--primary-color);
          text-decoration: none;
          font-size: 14px;
          font-weight: 500;
          transition: var(--transition);
          position: relative;
        }

        .back-to-login a:hover {
          color: var(--primary-dark);
        }

        .back-to-login a::after {
          content: '';
          position: absolute;
          bottom: -2px;
          left: 0;
          width: 0;
          height: 2px;
          background-color: var(--primary-color);
          transition: width 0.3s ease;
        }

        .back-to-login a:hover::after {
          width: 100%;
        }

        .back-to-login a::before {
          content: '\f053';
          font-family: 'Font Awesome 5 Free';
          font-weight: 900;
          margin-right: 6px;
          font-size: 12px;
        }

        @media (max-width: 480px) {
          .reset-password-wrapper {
            margin: 10px;
            max-width: none;
          }
          
          .reset-password-container {
            padding: 40px 25px 30px;
          }
          
          .reset-password-container h2 {
            font-size: 22px;
          }
          
          .reset-password-icon {
            font-size: 48px;
          }
          
          .back-button-container {
            top: 15px;
            left: 15px;
          }
        }
    </style>
  </style>
</head>

<div class="reset-password-background">
  <div class="reset-password-wrapper">
    <div class="reset-password-container">
      <!-- Header con ícono -->
      <div class="reset-password-header">
        <i class="fas fa-key reset-password-icon"></i>
        <h2>Restablecer contraseña</h2>
        <p class="reset-password-subtitle">Ingresa tu nueva contraseña y confírmala para completar el proceso.</p>
      </div>
      
      <!-- Mensaje de error -->
      <% if (error) { %>
        <div class="error"><%= error %></div>
      <% } %>

      <!-- Formulario -->
      <form action="/recovery/reset-password/<%= token %>" method="POST" class="reset-password-form" id="resetForm">
        <div class="password-input-group" id="passwordGroup">
          <input 
            type="password" 
            name="password" 
            id="password" 
            placeholder="Nueva contraseña" 
            required 
            autocomplete="new-password"
          />
          <i class="fas fa-eye toggle-password" id="togglePassword"></i>
          <i class="fas validation-icon" id="passwordValidationIcon"></i>
        </div>
        
        <div class="password-strength">
          <div class="strength-bar">
            <div class="strength-fill" id="strengthFill"></div>
          </div>
          <div class="strength-text" id="strengthText">Seguridad de la contraseña</div>
        </div>
        
        <div class="password-input-group" id="confirmGroup">
          <input 
            type="password" 
            name="confirmar" 
            id="confirmPassword" 
            placeholder="Confirmar contraseña" 
            required 
            autocomplete="new-password"
          />
          <i class="fas fa-eye toggle-password" id="toggleConfirmPassword"></i>
          <i class="fas validation-icon" id="confirmValidationIcon"></i>
        </div>
        
        <div class="password-match-message" id="passwordMatchMessage">
          Las contraseñas deben coincidir
        </div>
        
        <button type="submit" class="reset-button" id="submitButton" disabled>
          Restablecer contraseña
        </button>
      </form>
      
      <!-- Enlace para volver al login -->
      <div class="back-to-login">
        <a href="/">Volver al inicio de sesión</a>
      </div>
    </div>
  </div>
</div>

<!-- Script para funcionalidad -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  const passwordInput = document.getElementById('password');
  const confirmInput = document.getElementById('confirmPassword');
  const passwordGroup = document.getElementById('passwordGroup');
  const confirmGroup = document.getElementById('confirmGroup');
  const passwordValidationIcon = document.getElementById('passwordValidationIcon');
  const confirmValidationIcon = document.getElementById('confirmValidationIcon');
  const strengthFill = document.getElementById('strengthFill');
  const strengthText = document.getElementById('strengthText');
  const passwordMatchMessage = document.getElementById('passwordMatchMessage');
  const submitButton = document.getElementById('submitButton');
  const togglePassword = document.getElementById('togglePassword');
  const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');
  
  // Función para evaluar la fortaleza de la contraseña
  function checkPasswordStrength(password) {
    let strength = 0;
    
    // Longitud mínima
    if (password.length >= 8) strength++;
    // Contiene números
    if (password.match(/([0-9])/)) strength++;
    // Contiene minúsculas
    if (password.match(/([a-z])/)) strength++;
    // Contiene mayúsculas
    if (password.match(/([A-Z])/)) strength++;
    // Contiene caracteres especiales
    if (password.match(/([!,%,&,@,#,$,^,*,?,_,~])/)) strength++;
    
    return strength;
  }
  
  // Función para actualizar la barra de fortaleza
  function updateStrengthIndicator(password) {
    const strength = checkPasswordStrength(password);
    
    strengthFill.className = 'strength-fill';
    strengthText.className = 'strength-text';
    
    if (password.length === 0) {
      strengthFill.style.width = '0%';
      strengthText.textContent = 'Seguridad de la contraseña';
      return;
    }
    
    if (strength < 3) {
      strengthFill.classList.add('weak');
      strengthText.classList.add('weak');
      strengthText.textContent = 'Débil';
    } else if (strength < 5) {
      strengthFill.classList.add('medium');
      strengthText.classList.add('medium');
      strengthText.textContent = 'Media';
    } else {
      strengthFill.classList.add('strong');
      strengthText.classList.add('strong');
      strengthText.textContent = 'Fuerte';
    }
  }
  
  // Función para validar las contraseñas
  function validatePasswords() {
    const password = passwordInput.value;
    const confirm = confirmInput.value;
    let isValid = true;
    
    // Validar contraseña principal
    if (password.length >= 8) {
      passwordGroup.classList.remove('invalid');
      passwordGroup.classList.add('valid');
      passwordValidationIcon.className = 'fas fa-check validation-icon valid';
    } else {
      passwordGroup.classList.remove('valid');
      passwordGroup.classList.add('invalid');
      passwordValidationIcon.className = 'fas fa-times validation-icon invalid';
      isValid = false;
    }
    
    // Validar coincidencia
    if (confirm.length > 0 && password === confirm) {
      confirmGroup.classList.remove('invalid');
      confirmGroup.classList.add('valid');
      confirmValidationIcon.className = 'fas fa-check validation-icon valid';
      passwordMatchMessage.classList.add('match');
      passwordMatchMessage.classList.remove('no-match');
      passwordMatchMessage.classList.add('show');
      passwordMatchMessage.textContent = 'Las contraseñas coinciden';
    } else if (confirm.length > 0) {
      confirmGroup.classList.remove('valid');
      confirmGroup.classList.add('invalid');
      confirmValidationIcon.className = 'fas fa-times validation-icon invalid';
      passwordMatchMessage.classList.add('no-match');
      passwordMatchMessage.classList.remove('match');
      passwordMatchMessage.classList.add('show');
      passwordMatchMessage.textContent = 'Las contraseñas no coinciden';
      isValid = false;
    } else {
      passwordMatchMessage.classList.remove('show');
    }
    
    // Habilitar/deshabilitar botón
    submitButton.disabled = !isValid;
    
    return isValid;
  }
  
  // Event listeners
  passwordInput.addEventListener('input', function() {
    updateStrengthIndicator(this.value);
    validatePasswords();
  });
  
  confirmInput.addEventListener('input', validatePasswords);
  
  // Toggle para mostrar/ocultar contraseña
  togglePassword.addEventListener('click', function() {
    const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
    passwordInput.setAttribute('type', type);
    this.classList.toggle('fa-eye');
    this.classList.toggle('fa-eye-slash');
  });
  
  toggleConfirmPassword.addEventListener('click', function() {
    const type = confirmInput.getAttribute('type') === 'password' ? 'text' : 'password';
    confirmInput.setAttribute('type', type);
    this.classList.toggle('fa-eye');
    this.classList.toggle('fa-eye-slash');
  });
  
  // Validación inicial
  validatePasswords();
});
</script>

<!-- Incluir Font Awesome para los íconos -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">